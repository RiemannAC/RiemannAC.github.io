<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[GitHub Page 綁定 Namecheap 域名]]></title>
    <url>%2Fposts%2F859f993a%2F</url>
    <content type="text"><![CDATA[/* 修正 ol 後縮 */ ol { padding-left: 16px; } .custom-table table { width: auto; } /* 圖片長度一致 */ .custom-img img { width: 100%; } 想更換 GitHub Page 的 domain name 找了幾家 DNS。我要的域名在 Namecheap 比較便宜，又有免費的 WhoisGuard 服務，個人使用上比較隱私就選擇了 Namecheap 購買域名購買域名的部份請參考其它教學，大致上挑喜歡的域名加入購物車結帳即可，一般使用不到其它付費選項 將域名連結 GitHub PageNamecheap 提供了設定文件 以下以這個 Blog 為例： 原本 Blog 的位址為 https://riemannac.github.io域名 riemann.blog 請自行更換成自己的位址和域名 在 Sidebar 點選 “Domain List” 在購買的域名那一列右側點選 “MANAGE” 點選圖擊的 Advanced DNS 點擊左下紅色的 ADD NEW RECORD 並新增四個 record 如下: 四個 A Record 都是指向 GitHub DNS Server IP 一般設定一到兩個即可，但這邊就照文件設定 CNAME Record 指向預連結的 GitHub Page 完成後儲存設定 Type Host Value TTL A Record @ 185.199.108.153 30 min A Record @ 185.199.109.153 Automatic A Record @ 185.199.110.153 Automatic A Record @ 185.199.111.153 Automatic CNAME Record www riemannac.github.io 30 min 刪除兩個預設的 Record 將 GitHub Page 綁定域名到 GitHub 專案 Setting 頁面 &gt; GitHub Pages &gt; Custom domain 填入申請的域名並按下 Save 儲存設定即可 下方的 Enforce HTTPS 一般幾個小時後便可以按下，然後網址就是 https 開頭了 上傳 CNAME 設定 在 source 目錄下新增一個檔案 [~/blog/source] (✘ master) $ touch CNAME 檔案內容輸入域名 若輸入 www.riemann.blog 則只能訪問帶有 www 開頭的位址，輸入 riemann.blog 則兩者皆可 source/CNAME1riemann.blog 執行 hexo clean &amp;&amp; hexo d -g 上傳後就會保留設定避免每次佈署後 CNAME 消失 參考資料實作 - 如何更改 Github-Page 的網域 | Kenny LiGitHub+Hexo 搭建个人网站详细教程 | echobits]]></content>
      <categories>
        <category>HTTP</category>
      </categories>
      <tags>
        <tag>DNS</tag>
        <tag>GitHub Page</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[為標題增加錨點]]></title>
    <url>%2Fposts%2Fe346fae7%2F</url>
    <content type="text"><![CDATA[.custom-table table { width: auto; } HackMD 用習慣了，和 Hexo 的 Markdown 還是有些不同，編輯整理資料時有錨點還是比較方便，查了一下 Markdown 的語法，發現只使用 Markdown 的狀況，還是可以增加錨點 觀察 id 生成規則Markdown 不同版本都有些細節不同，先觀查 id 生成規則如下表： Header Identifier Header identifiers in HTML Header-identifiers-in-HTML Dogs?-in my house? Dogs-in-my-house [HTML], [S5], or [RTF]? HTML-S5-or-RTF 3. Applications 3-Applications 33 33 大小寫會被保留，符號會被去除，空格補上連字號 使用 Markdown 建立錨點原標題 ## 新增錨點 加上錨點 ## [新增錨點](#新增錨點) 需要按照 id 生成規將連結指向標題的 id 若命名不同錨點就會失效 如果錨點需要給定 “別名” 可參考此篇 Hexo 里的标题锚点链接 | mdluo ( 需要另外安裝套件 ) 修改樣式themes/next/source/css/_custom/custom.styl12345678910111213141516171819// 自訂錨點樣式h1 a:nth-child(2),h2 a:nth-child(2),h3 a:nth-child(2),h4 a:nth-child(2),h5 a:nth-child(2),h6 a:nth-child(2) &#123; // 移除 a 預設下底線 border-bottom: none; // 新增錨點 Pseudo-elements &amp;:hover &#123; &amp;::after &#123; content: "#"; margin-left: 0.5em; position: absolute; color: #0e83cd; &#125; &#125;&#125; 滑鼠移到標題上便會出現錨點樣式 # 參考資料Pandoc’s Markdown 語法中文翻譯 | tzengyuxioHexo 里的标题锚点链接 | mdluo]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Anchor</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Gulp 壓縮 Hexo Blog]]></title>
    <url>%2Fposts%2F117c70ea%2F</url>
    <content type="text"><![CDATA[/* 修正 ol 後縮 */ ul { padding-left: 24px; } Gulp 是什麼Gulp 是一個任務管理工具，可以可以執行設定的工作 轉譯 html, css, js 壓縮 .css, .js 及圖檔等其它功能 消除多餘空白及換行減少檔案體積以利於檔案傳輸，減少網頁訪問時間 安裝 GulpGulp 目前最新版是 4.0 安裝 Gulp 需先安裝全域的一次，再本地環境安裝一次，參考 Gulp $ npm i gulp -g$ [~/blog] npm i gulp --save 安裝後確認版本 $ gulp -vCLI version: 2.2.0Local version: 4.0.2 同時需要安裝以下插件： npm i gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save 編輯 gulpfile.js在 blog 根目錄下新增 gulpfile.js 檔案，其內容如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748var gulp = require('gulp');var minifycss = require('gulp-minify-css');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');var imagemin = require('gulp-imagemin');// 壓縮 htmlgulp.task('minify-html', function() &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public'))&#125;);// 壓縮 cssgulp.task('minify-css', function() &#123; return gulp.src('./public/**/*.css') .pipe(minifycss(&#123; compatibility: 'ie8' &#125;)) .pipe(gulp.dest('./public'));&#125;);// 壓縮 jsgulp.task('minify-js', function() &#123; return gulp.src('./public/**/*.js') .pipe(uglify()) .pipe(gulp.dest('./public'));&#125;);// 壓縮圖片gulp.task('minify-images', function() &#123; return gulp.src('./public/images/**/*.*') .pipe(imagemin( [imagemin.gifsicle(&#123;'optimizationLevel': 3&#125;), imagemin.jpegtran(&#123;'progressive': true&#125;), imagemin.optipng(&#123;'optimizationLevel': 7&#125;), imagemin.svgo()], &#123;'verbose': true&#125;)) .pipe(gulp.dest('./public/images'))&#125;);// 預設任務gulp.task('default', gulp.parallel( 'minify-html','minify-css','minify-js','minify-images')); 一鍵佈署在 package.json 中加入以下 script "scripts": &#123; "push": "hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d"&#125; 佈署時只需要執行 $ npm run push 參考資料Gulp 官方Gulp GItHubGulp 環境安裝 | 卡斯伯hexo 优化之——使用 gulp 压缩资源利用gulp对Hexo博客压缩并一键之部署使用 Gulp 4.0 新的(CLI)命令行界面]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Gulp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-永久連結設定]]></title>
    <url>%2Fposts%2Fd3aa7087%2F</url>
    <content type="text"><![CDATA[/* 修正 ol 後縮 */ ol { padding-left: 24px; } 按照官方文件的預設在 _config.yml 用 permalink: :year/:month/:day/:title/ 做為 url 這種配置由於 url 太多層不利於 SEO 而且若 title 使用中文則導致 url 內出現中文會造成很多問題 另外 title 修改導致 url 變動，若使用 Disqus 第三方留言服務，也會造成留言流失的問題 解決辦法一般有兩個方法，在此介紹第二種方法 使用 urlname 使用 hexo-abbrlink 使用 Hexo-abbrlink使用 hexo-abbrlink 套件會自動生成唯一的連結，新增時不需要再增加 urlname 屬性，後期修改文章連結也不會變動。連結層級短，更利於 SEO ( 一般 SEO 只爬三層 ) 安裝 hexo-abbrlinknpm install hexo-abbrlink --save 設定 yamlblog/_config.yml1234permalink: posts/:abbrlink/abbrlink: alg: crc32 # support crc16(default) and crc32 rep: hex # support dec(default) and hex 重新渲染頁面$ hexo clean$ hexo g$ hexo s 可以發現每一篇 post 的 Front-matter 區域會自動生成一行 abbrlink，即使文章本身沒設定 date 也無妨 abbrlink: d3aa7087 https://域名/posts/d3aa7087 即是此篇文章的 url 參考資料rozbo/hexo-abbrlinkhexo链接持久化终极解决之道]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Permalinks</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scaffolds 與新增 Post]]></title>
    <url>%2Fposts%2Faa0a190f%2F</url>
    <content type="text"><![CDATA[設定 ScaffoldsScaffolds 預設三種模型，比較常用的是 Post 按照需求設定 Scaffolds 後，新增 Post 就不需要手動修改 Front-matter 區域 除了 Front-matter 區域，本文架構也可以在 Scaffolds 內設定 blog/scaffolds/post.md123456789---title: &#123; &#123; title &#125; &#125; # 大括號間的空格要去除date: &#123; &#123; date &#125; &#125; # 大括號間的空格要去除tags:categories:summary_img: # 詳見 &quot;首頁文章摘要封面&quot;author: # 填上 ID---&lt;!-- more --&gt; 新增 Post若無指定 layout 則預設使用 post 版型 $ hexo new [layout] &lt;title&gt; 新增一篇文章 $ hexo new "Hello World"INFO Created: ~/blog/source/_posts/Hello World.md 生成預設 Post 版型，直接使用 Markdown 編輯文章即可 預覽啟動本地伺服查看文章 $ hexo server server 可簡化為 s 有編輯同步更新預覽功能，儲存文章後可即時觀察結果]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Syntax</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[設置文章封面圖片(文章內不顯示)]]></title>
    <url>%2Fposts%2F5eca9ba7%2F</url>
    <content type="text"><![CDATA[在首頁會顯示文章摘要封面，進入 “閱讀全文” 後不會顯示這張圖片，很適合做為分類圖片 設定 Post.swig修改 \themes\next\layout_macro\post.swing 文件，將下面程式碼複製： &#123;% if post.summary_img %&#125; &lt;div class="out-img-topic"&gt; &lt;img src=&#123;&#123; post.summary_img &#125;&#125; class="img-topic"&gt; &lt;/div&gt;&#123;% endif %&#125; 程式碼插入位置如下: 282283284285286287288289290291292293294295296297 &#123;# Append end tag for `post-gallery-row` when (photos size mod COLUMN_NUMBER) is less than COLUMN_NUMBER #&#125; &#123;% if post.photos.length % COLUMN_NUMBER &gt; 0 %&#125;&lt;/div&gt;&#123;% endif %&#125; &lt;/div&gt;&#123;% endif %&#125;&#123;% if is_index %&#125; &lt;!-- 首頁文章摘要圖片設定 --&gt; &#123;% if post.summary_img %&#125; &lt;div class="out-img-topic"&gt; &lt;img src=&#123;&#123; post.summary_img &#125;&#125; class="img-topic"&gt; &lt;/div&gt; &#123;% endif %&#125; &lt;!-- 首頁文章摘要圖片設定 --&gt; &#123;% if post.description and theme.excerpt_description %&#125; 設定 Front-atter 區域在新建的文章 Front-matter 區域添加一个字段屬性 summary_img 如下: ---title: 文章封面設置tags:categories:summary_img: /images/cover.jpg # 不使用的話空著就好，Front-matter 模版不用修改--- 注意: 可使用網路圖片，但本地圖片要放在 images 目錄下 檔案名稱不可有空格如: cover 400x400.jpg 會導致圖檔無法讀取 參考資料【目录】Hexo+NexT搭建博客拥抱舒爽 &gt; 3.10 设置文章封面图片(文章内不显示)]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Swig</tag>
        <tag>Front-matter</tag>
        <tag>Customized</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fposts%2F4a17b156%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new "My New Post" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy Code with path&#123;% codeblock _config.yml %&#125;# Sitemapsitemap: path: sitemap.xml&#123;% endcodeblock %&#125; _config.yml123# Sitemapsitemap: path: sitemap.xml MathJax$x^&#123;y^z&#125;=(1+&#123;\rm e&#125;^x)^&#123;-2xy^w&#125;$ $x^{y^z}=(1+{\rm e}^x)^{-2xy^w}$ More info: MathJax Imgur![Here is alt desc](imgurl) Title### Title### Title ##### #Code-block-with-fence a { color: red; } .primary { color: red; } Code block with fence````````test````````]]></content>
      <categories>
        <category>Testing</category>
      </categories>
      <tags>
        <tag>Testing</tag>
        <tag>Another Tag</tag>
      </tags>
  </entry>
</search>
